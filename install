#!/bin/bash

# Set bash environment error management

set -e
set -u

# Source local functions file

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. $script_dir/functions

# Check for root user runtime

check_root

################################################################################

# Download and source openspace functions file

download_os_functions
source_os_functions

################################################################################

os-define_formatting

define_vars

mkdir -p $conf_dir

echo

################################################################################

if [[ "${@#--return-check}" = "$@" ]]
then
        echo "${r}${b}This script must not be run directly.${x}"
	echo
        echo "${b}You should instead run the | ${x}${g}${b}setup${x}${b} | script and it will take care of the installation itself.${x}"
	echo
        echo "${b}Exiting...${x}"
        echo
        exit
fi

################################################################################

echo "${b}Initiating installer...${x}"
echo

install_easyengine

echo "${b}Now installing scripts in | $install_dir/ | ...${x}"
echo
if [ -d $install_dir ]
then
        now="$(date +"%Y-%m-%d_%H-%M-%S")"
        echo "${g}${b}Found existing installation.${x}"
        echo
	if [ ! -f $install_dir/config ]
	then
		echo "${r}${b} | config | file NOT found in existing installation. Creating a new one now...${x}"
	        echo
		rsync -aAXx $source_dir/ $install_dir/ --exclude=setup --exclude=install --exclude=README.md
	else
		echo "${b}Preserving old | config | file...${x}"
		echo
        	rsync -aAXx $source_dir/ $install_dir/ --exclude=config --exclude=setup --exclude=install --exclude=README.md
	fi
else
	mkdir -p $install_dir
        rsync -aAXx $source_dir/ $install_dir/ --exclude=install --exclude=README.md
fi
echo "${b}Finished installing scripts.${x}"
echo



echo "${b}Now adding backup script to daily crontab...${x}"
echo
touch /etc/cron.daily/ee-br-backup
chmod 755 /etc/cron.daily/ee-br-backup
echo -e '#!/bin/bash' > /etc/cron.daily/ee-br-backup
echo >> /etc/cron.daily/ee-br-backup
echo "bash $install_dir/ee-br-backup" >> /etc/cron.daily/ee-br-backup
echo "${b}Finished adding backup script to daily crontab...${x}"
echo



echo "${b}Now saving current version...${x}"
echo
curr_vers="$(grep 'refs/tags/' $script_dir/.git/packed-refs | awk '{print $2}' | sed "s|refs/tags/v||g")"
echo "$curr_vers" > "$conf_dir"/installed_version
echo "${b}Finished saving current version.${x}"
echo



echo "${b}Now removing installer directory...${x}"
echo
rm -r $source_dir
echo "${b}Finished removing installer directory.${x}"
echo



echo "${b}Installation complete!${x}"
echo
