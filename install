#!/bin/bash

r=`tput setaf 1`
g=`tput setaf 2`
l=`tput setaf 4`
m=`tput setaf 5`
x=`tput sgr0`
b=`tput bold`

set -e
set -u

################################################################################

# Don't change these! | No trailing slash!

sourcedir=/root/easyengine-backup-restore
basedir=/root/nikksno
installdir=$basedir/ee-br
backupsdir=$installdir/backups
localbackupsdir=$backupsdir/local
s3backupsdir=$backupsdir/s3
restoresdir=$installdir/restores
tmpdir=/tmp/ee-br
wwwdir=/var/www

if [[ $EUID -ne 0 ]]
then
	echo "${r}${b}This script must be run as root. Run it as:${x}"
	echo
	echo "${b}sudo bash $installdir/ee-br-backup${x}"
	echo
        # Send email indicating backup aborted
        echo "${b}Exiting...${x}"
        echo
        exit
fi

################################################################################



echo

echo "${b}Initiating installer...${x}"
echo

echo "${b}Now installing dependencies...${x}"
echo
hostname="$(cat /etc/hostname)"
apt-add-repository ppa:duplicity-team/ppa -y
apt-get update
apt-get -y install duplicity python-pip pwgen pv python-boto
pip install --upgrade pip
pip install boto
debconf-set-selections <<< "postfix postfix/mailname string $hostname"
debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
apt-get install -y mailutils
/etc/init.d/postfix reload
echo
echo "${b}Finished installing dependencies.${x}"
echo



echo "${b}Now installing scripts in | $installdir/ | ...${x}"
echo
if [ -d $installdir ]
then
        now="$(date +"%Y-%m-%d_%H-%M-%S")"
        echo "${g}${b}Found existing installation. Backing up to | $installdir-old-$now | ...${x}"
        echo
        cp -r $installdir $installdir-old-$now
        #find $sourcedir/ ! -name config -exec cp -t $installdir/ {} +
        rsync -aAXx $sourcedir/ $installdir/ --exclude=config --exclude=install --exclude=README.md
else
        rsync -aAXx $sourcedir/ $installdir/ --exclude=install --exclude=README.md
fi
echo "${b}Finished installing scripts.${x}"
echo



echo "${b}Now adding backup script to daily crontab...${x}"
echo
touch /etc/cron.daily/ee-br-backup
chmod 755 /etc/cron.daily/ee-br-backup
echo -e '#!/bin/bash' > /etc/cron.daily/ee-br-backup
echo >> /etc/cron.daily/ee-br-backup
echo "bash $installdir/ee-br-backup" >> /etc/cron.daily/ee-br-backup
echo "${b}Finished adding backup script to daily crontab...${x}"
echo



echo "${b}Now removing installer directory...${x}"
echo
rm -r $sourcedir
echo "${b}Finished removing installer directory.${x}"
echo



echo "${b}Installation complete!...${x}"
echo
